CMAKE_MINIMUM_REQUIRED ( VERSION 3.5.0 )
PROJECT ( multistep CXX )

# User-serviceable variables here
SET_PROPERTY(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release" "RelWithDebInfo")
IF (NOT CMAKE_BUILD_TYPE)
  SET (CMAKE_BUILD_TYPE "Release")
ENDIF ()
SET (CMAKE_BUILD_TYPE "Release" CACHE STRING "Select which configuration to build")

SET (CMAKE_VERBOSE_MAKEFILE on)
SET (CMAKE_EXPORT_COMPILE_COMMANDS on)

IF (CMAKE_COMPILER_IS_GNUCXX)
  SET (CMAKE_CXX_FLAGS "-Wall -Wformat -std=c++20")
  SET (CMAKE_CXX_FLAGS_DEBUG "-O0 -g -ggdb3")
  SET (CMAKE_CXX_FLAGS_RELEASE "-O3 -march=native")
  SET (CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O3 -march=native -g -ggdb3")
ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
  SET (CMAKE_CXX_FLAGS "-Wall -Wformat -std=c++20")
  SET (CMAKE_CXX_FLAGS_DEBUG "-O0 -g -ggdb")
  SET (CMAKE_CXX_FLAGS_RELEASE "-O3")
  SET (CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O3 -g -ggdb")
ELSEIF (MSVC)
  SET (CMAKE_CXX_FLAGS "/std:c++20 /EHsc /D_USE_MATH_DEFINES /DNOMINMAX")
  SET (CMAKE_CXX_FLAGS_DEBUG "/Zi")
  SET (CMAKE_CXX_FLAGS_RELEASE "/O2")
ENDIF ()

# support higher-precision mathematics (has O(10^-14) effect)
#SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DEIGEN_FAST_MATH=0 -DDEIGEN_DONT_VECTORIZE")

IF ( WIN32 )

  SET (EIGEN_ROOT "${GL_LIBS_HOME}/eigen-3.3.7" CACHE STRING "Eigen root" )
  INCLUDE_DIRECTORIES ( "${EIGEN_ROOT}" )

  SET (PLATFORM_LIBS ${FRAMEWORK_LIBS} )

ELSEIF ( APPLE )

  INCLUDE_DIRECTORIES ( "/usr/local/include" )
  INCLUDE_DIRECTORIES ( "/usr/local/include/eigen3" )
  #INCLUDE_DIRECTORIES ( "/usr/local/Cellar/eigen/3.3.4/include/eigen3" )

  INCLUDE_DIRECTORIES ( /System/Library/Frameworks )
  FIND_LIBRARY (COCOA_LIBRARY Cocoa)
  FIND_LIBRARY (IOKIT_LIBRARY IOKit)
  MARK_AS_ADVANCED (COCOA_LIBRARY IOKIT_LIBRARY)

  SET (PLATFORM_LIBS ${FRAMEWORK_LIBS} ${COCOA_LIBRARY} ${IOKIT_LIBRARY})

ELSEIF ( UNIX )

  # because clang does this differently
  IF (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
    SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libstdc++")
  ENDIF ()

  INCLUDE_DIRECTORIES ( "/usr/include/eigen3" )

ENDIF ()

INCLUDE_DIRECTORIES ( "src" )

ADD_EXECUTABLE ( "runmultistep" "src/multistep.cpp" )

#TARGET_LINK_LIBRARIES ( ${PROJECT_NAME} ${PLATFORM_LIBS} )

